{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berna\\\\Desktop\\\\mainproject\\\\SEN\\\\front-end\\\\src\\\\forms\\\\InstantQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { BsArrowRightShort } from \"react-icons/bs\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { zipCodeListFrom } from \"../actions/zipCodeActions\";\nimport { zipCodeListTo } from \"../actions/zipCodeActions\";\nimport { newOrder } from \"../actions/orderFormActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InstantQuote = () => {\n  _s();\n\n  const HISTORY = useHistory();\n  const dispatch = useDispatch();\n  const zipCodeFromList = useSelector(state => state.zipCodeFromList);\n  const newOrderList = useSelector(state => state.newOrderList); // const { loading, success, error, order } = newOrderList;\n\n  console.log({\n    zipCodeFromList\n  });\n  const [inputs, setInputs] = useState({\n    zipFrom: \"\",\n    zipTo: \"\",\n    pickUpDate: \"\",\n    dropOffDate: \"\",\n    numberOfCars: \"\"\n  });\n\n  const handleChange = inputName => e => {\n    e.preventDefault();\n    setInputs({ ...inputs,\n      [inputName]: e.target.value\n    });\n  };\n\n  function convertDateFormat(date) {\n    return String(date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear());\n  }\n\n  const Continue = e => {\n    e.preventDefault();\n    dispatch(zipCodeListFrom(inputs.zipFrom));\n    dispatch(zipCodeListTo(inputs.zipTo));\n    dispatch(newOrder(inputs.zipFrom, inputs.zipTo, \"24/11/1993\", \"20/04/2021\", inputs.numberOfCars));\n    console.log(\"Berna\" + inputs.pickUpDate);\n    HISTORY.push({\n      pathname: \"/checkout\",\n      state: inputs\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"instantquote p-3 mb-5\",\n    novalidateQuote: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formGroupFrom\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Transport car FROM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"ZIP or CITY\",\n        name: \"zipFrom\",\n        onChange: handleChange(\"zipFrom\"),\n        defaultValue: inputs.zipFrom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formGroupTo\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Transport car TO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"ZIP or CITY\",\n        name: \"zipTo\",\n        onChange: handleChange(\"zipTo\"),\n        defaultValue: inputs.zipTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"pickUpDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Pick Up Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: handleChange(\"pickUpDate\"),\n        name: \"pickUpDate\",\n        defaultValue: inputs.pickUpDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"dropOffDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Drop Off Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: handleChange(\"dropOffDate\"),\n        name: \"dropOffDate\",\n        defaultValue: inputs.dropOffDate,\n        \"data-date-format\": \"DD/MM/YYYY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"selectNumberOfCars\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        className: \"dropdown\",\n        onChange: handleChange(\"numberOfCars\"),\n        name: \"numberOfCars\",\n        defaultValue: inputs.numberOfCars,\n        \"data-date-format\": \"DD/MM/YYYY\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Number Of Cars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), [...Array(10).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: x + 1,\n          children: x + 1\n        }, x + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn button\",\n      onClick: Continue,\n      children: [\"Vehicle Details\", /*#__PURE__*/_jsxDEV(BsArrowRightShort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InstantQuote, \"PcwVS54pSg8igJzg49Msh4u/ckE=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = InstantQuote;\nexport default InstantQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstantQuote\");","map":{"version":3,"sources":["C:/Users/berna/Desktop/mainproject/SEN/front-end/src/forms/InstantQuote.js"],"names":["React","useState","useEffect","Form","BsArrowRightShort","useHistory","useDispatch","useSelector","zipCodeListFrom","zipCodeListTo","newOrder","InstantQuote","HISTORY","dispatch","zipCodeFromList","state","newOrderList","console","log","inputs","setInputs","zipFrom","zipTo","pickUpDate","dropOffDate","numberOfCars","handleChange","inputName","e","preventDefault","target","value","convertDateFormat","date","String","getDate","getMonth","getFullYear","Continue","push","pathname","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BsArrowRightShort } from \"react-icons/bs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { zipCodeListFrom } from \"../actions/zipCodeActions\";\r\nimport { zipCodeListTo } from \"../actions/zipCodeActions\";\r\nimport { newOrder } from \"../actions/orderFormActions\";\r\n\r\nconst InstantQuote = () => {\r\n  const HISTORY = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const zipCodeFromList = useSelector(state => state.zipCodeFromList);\r\n  const newOrderList = useSelector((state) => state.newOrderList);\r\n  // const { loading, success, error, order } = newOrderList;\r\n  console.log({zipCodeFromList});\r\n\r\n  const [inputs, setInputs] = useState({\r\n    zipFrom: \"\",\r\n    zipTo: \"\",\r\n    pickUpDate: \"\",\r\n    dropOffDate: \"\",\r\n    numberOfCars: \"\",\r\n  });\r\n\r\n  const handleChange = (inputName) => (e) => {\r\n    e.preventDefault();\r\n\r\n    setInputs({\r\n      ...inputs,\r\n      [inputName]: e.target.value,\r\n    });\r\n  };\r\n\r\n  function convertDateFormat(date) {\r\n    return String(date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear())\r\n}\r\n\r\n  const Continue = (e) => {\r\n    e.preventDefault();\r\n    dispatch(zipCodeListFrom(inputs.zipFrom));\r\n    dispatch(zipCodeListTo(inputs.zipTo));\r\n    dispatch(newOrder(inputs.zipFrom, inputs.zipTo,\"24/11/1993\", \"20/04/2021\",inputs.numberOfCars));\r\n    console.log(\"Berna\" + inputs.pickUpDate);\r\n    HISTORY.push({ pathname: \"/checkout\", state: inputs });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"instantquote p-3 mb-5\" novalidateQuote>\r\n      <Form.Group controlId=\"formGroupFrom\">\r\n        <Form.Label className=\"form-subtitle\">Transport car FROM</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"ZIP or CITY\"\r\n          name=\"zipFrom\"\r\n          onChange={handleChange(\"zipFrom\")}\r\n          defaultValue={inputs.zipFrom}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGroupTo\">\r\n        <Form.Label className=\"form-subtitle\">Transport car TO</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"ZIP or CITY\"\r\n          name=\"zipTo\"\r\n          onChange={handleChange(\"zipTo\")}\r\n          defaultValue={inputs.zipTo}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"pickUpDate\">\r\n        <Form.Label className=\"form-subtitle\">Pick Up Date</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          onChange={handleChange(\"pickUpDate\")}\r\n          name=\"pickUpDate\"\r\n          defaultValue={inputs.pickUpDate}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"dropOffDate\">\r\n        <Form.Label className=\"form-subtitle\">Drop Off Date</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          onChange={handleChange(\"dropOffDate\")}\r\n          name=\"dropOffDate\"\r\n          defaultValue={inputs.dropOffDate}\r\n          data-date-format=\"DD/MM/YYYY\"\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"selectNumberOfCars\">\r\n        {/* <Form.Label>Number Of Cars</Form.Label> */}\r\n        <Form.Control\r\n          as=\"select\"\r\n          className=\"dropdown\"\r\n          onChange={handleChange(\"numberOfCars\")}\r\n          name=\"numberOfCars\"\r\n          defaultValue={inputs.numberOfCars}\r\n          data-date-format=\"DD/MM/YYYY\"\r\n        >\r\n          <option>Number Of Cars</option>\r\n          {[...Array(10).keys()].map((x) => (\r\n            <option key={x + 1} value={x + 1}>\r\n              {x + 1}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <button className=\"btn button\" onClick={Continue}>\r\n        Vehicle Details\r\n        <BsArrowRightShort />\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default InstantQuote;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Axios from \"axios\";\nimport { NEW_ORDER_FORM_VEHICLE_DETAILS, NEW_ORDER_INFORMAION_DETAILS, NEW_ORDER_PAYMENT_METHOD, CALCULATE_COST_REQUEST, CALCULATE_COST_SUCCESS, CALCULATE_COST_FAIL, NEW_ORDER_REQUEST, NEW_ORDER_SUCCESS, NEW_ORDER_FAIL, NEW_ORDER_CAR_REQUEST, NEW_ORDER_CAR_SUCCESS, NEW_ORDER_CAR_FAIL } from \"../constants/orderFormConstants\";\nexport const newOrder = (zipCodeFrom, zipCodeTo, pickUpDate, dropOffDate, numberOfCars) => async dispatch => {\n  dispatch({\n    type: NEW_ORDER_REQUEST,\n    payload: {\n      zipCodeFrom,\n      zipCodeTo,\n      pickUpDate,\n      dropOffDate,\n      numberOfCars\n    }\n  });\n\n  try {\n    const [data] = await Axios({\n      method: \"POST\",\n      url: \"http://159.65.163.193:5000/order/new\",\n      headers: {\n        \"cache-Control\": \"no-cache\",\n        \"content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        \"order_from_zip\": zipCodeFrom,\n        \"order_to_zip\": zipCodeTo,\n        \"order_pick_up_date\": pickUpDate,\n        \"order_drop_off_date\": dropOffDate,\n        \"order_number_of_cars\": numberOfCars\n      }\n    });\n    dispatch({\n      type: NEW_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_ORDER_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const newOrderCar = (carMake, carModel, carYear, orderId, carVinNumber, carMileage, carIsOperable, carInAuction) => async dispatch => {\n  dispatch({\n    type: NEW_ORDER_CAR_REQUEST,\n    payload: {\n      carMake,\n      carModel,\n      carYear,\n      orderId,\n      carVinNumber,\n      carMileage,\n      carIsOperable,\n      carInAuction\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"http://159.65.163.193/car/new/\",\n      headers: {\n        \"cache-Control\": \"no-cache\",\n        \"content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        car_make: carMake,\n        car_model: carModel,\n        car_year: carYear,\n        order_id: orderId,\n        car_vin_number: carVinNumber,\n        car_mileage: carMileage,\n        car_is_operable: carIsOperable,\n        car_is_in_auction: carInAuction\n      }\n    });\n    dispatch({\n      type: NEW_ORDER_CAR_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_ORDER_CAR_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const vehicleDetailsList = data => dispatch => {\n  dispatch({\n    type: NEW_ORDER_FORM_VEHICLE_DETAILS,\n    payload: data\n  });\n  localStorage.setItem(\"vehicleDetails\", JSON.stringify(data));\n};\nexport const informationDetailsList = data => dispatch => {\n  dispatch({\n    type: NEW_ORDER_INFORMAION_DETAILS,\n    payload: data\n  }); // localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: NEW_ORDER_PAYMENT_METHOD,\n    payload: data\n  });\n};\nexport const calculateCost = (zipList, carList, individual) => async dispatch => {\n  dispatch({\n    type: CALCULATE_COST_REQUEST,\n    payload: {\n      zipList,\n      carList,\n      individual\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"http://159.65.45.58:5000/price/\",\n      headers: {\n        \"cache-Control\": \"no-cache\",\n        \"content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        \"ziplist\": zipList,\n        \"carlist\": carList,\n        \"individual\": individual\n      }\n    });\n    dispatch({\n      type: CALCULATE_COST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CALCULATE_COST_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/berna/Desktop/mainproject/SEN/front-end/src/actions/orderFormActions.js"],"names":["Axios","NEW_ORDER_FORM_VEHICLE_DETAILS","NEW_ORDER_INFORMAION_DETAILS","NEW_ORDER_PAYMENT_METHOD","CALCULATE_COST_REQUEST","CALCULATE_COST_SUCCESS","CALCULATE_COST_FAIL","NEW_ORDER_REQUEST","NEW_ORDER_SUCCESS","NEW_ORDER_FAIL","NEW_ORDER_CAR_REQUEST","NEW_ORDER_CAR_SUCCESS","NEW_ORDER_CAR_FAIL","newOrder","zipCodeFrom","zipCodeTo","pickUpDate","dropOffDate","numberOfCars","dispatch","type","payload","data","method","url","headers","error","message","newOrderCar","carMake","carModel","carYear","orderId","carVinNumber","carMileage","carIsOperable","carInAuction","car_make","car_model","car_year","order_id","car_vin_number","car_mileage","car_is_operable","car_is_in_auction","vehicleDetailsList","localStorage","setItem","JSON","stringify","informationDetailsList","savePaymentMethod","calculateCost","zipList","carList","individual"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport {\r\n  NEW_ORDER_FORM_VEHICLE_DETAILS,\r\n  NEW_ORDER_INFORMAION_DETAILS,\r\n  NEW_ORDER_PAYMENT_METHOD,\r\n  CALCULATE_COST_REQUEST,\r\n  CALCULATE_COST_SUCCESS,\r\n  CALCULATE_COST_FAIL,\r\n  NEW_ORDER_REQUEST,\r\n  NEW_ORDER_SUCCESS,\r\n  NEW_ORDER_FAIL,\r\n  NEW_ORDER_CAR_REQUEST,\r\n  NEW_ORDER_CAR_SUCCESS,\r\n  NEW_ORDER_CAR_FAIL,\r\n} from \"../constants/orderFormConstants\";\r\n\r\nexport const newOrder =\r\n  (zipCodeFrom, zipCodeTo, pickUpDate, dropOffDate, numberOfCars) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: NEW_ORDER_REQUEST,\r\n      payload: {\r\n        zipCodeFrom,\r\n        zipCodeTo,\r\n        pickUpDate,\r\n        dropOffDate,\r\n        numberOfCars,\r\n      },\r\n    });\r\n    try {\r\n      const [ data ] = await Axios({\r\n        method: \"POST\",\r\n        url: \"http://159.65.163.193:5000/order/new\",\r\n        headers: {\r\n          \"cache-Control\": \"no-cache\",\r\n          \"content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n          \"order_from_zip\": zipCodeFrom,\r\n          \"order_to_zip\": zipCodeTo,\r\n          \"order_pick_up_date\": pickUpDate,\r\n          \"order_drop_off_date\": dropOffDate,\r\n          \"order_number_of_cars\": numberOfCars,\r\n        },\r\n      });\r\n      dispatch({ type: NEW_ORDER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: NEW_ORDER_FAIL, payload: error.message });\r\n    }\r\n  };\r\n\r\nexport const newOrderCar =\r\n  (\r\n    carMake,\r\n    carModel,\r\n    carYear,\r\n    orderId,\r\n    carVinNumber,\r\n    carMileage,\r\n    carIsOperable,\r\n    carInAuction\r\n  ) =>\r\n  async (dispatch) => {\r\n    dispatch({\r\n      type: NEW_ORDER_CAR_REQUEST,\r\n      payload: {\r\n        carMake,\r\n        carModel,\r\n        carYear,\r\n        orderId,\r\n        carVinNumber,\r\n        carMileage,\r\n        carIsOperable,\r\n        carInAuction,\r\n      },\r\n    });\r\n    try {\r\n      const { data } = await Axios({\r\n        method: \"POST\",\r\n        url: \"http://159.65.163.193/car/new/\",\r\n        headers: {\r\n          \"cache-Control\": \"no-cache\",\r\n          \"content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n          car_make: carMake,\r\n          car_model: carModel,\r\n          car_year: carYear,\r\n          order_id: orderId,\r\n          car_vin_number: carVinNumber,\r\n          car_mileage: carMileage,\r\n          car_is_operable: carIsOperable,\r\n          car_is_in_auction: carInAuction,\r\n        },\r\n      });\r\n      dispatch({ type: NEW_ORDER_CAR_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: NEW_ORDER_CAR_FAIL, payload: error.message });\r\n    }\r\n  };\r\n\r\nexport const vehicleDetailsList = (data) => (dispatch) => {\r\n  dispatch({ type: NEW_ORDER_FORM_VEHICLE_DETAILS, payload: data });\r\n  localStorage.setItem(\"vehicleDetails\", JSON.stringify(data));\r\n};\r\n\r\nexport const informationDetailsList = (data) => (dispatch) => {\r\n  dispatch({ type: NEW_ORDER_INFORMAION_DETAILS, payload: data });\r\n  // localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({ type: NEW_ORDER_PAYMENT_METHOD, payload: data });\r\n};\r\n\r\nexport const calculateCost =\r\n  (zipList, carList, individual) => async (dispatch) => {\r\n    dispatch({\r\n      type: CALCULATE_COST_REQUEST,\r\n      payload: { zipList, carList, individual },\r\n    });\r\n    try {\r\n      const { data } = await Axios({\r\n        method: \"POST\",\r\n        url: \"http://159.65.45.58:5000/price/\",\r\n        headers: {\r\n          \"cache-Control\": \"no-cache\",\r\n          \"content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n          \"ziplist\": zipList,\r\n          \"carlist\": carList,\r\n          \"individual\": individual,\r\n        },\r\n      });\r\n      dispatch({ type: CALCULATE_COST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: CALCULATE_COST_FAIL, payload: error.message });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}
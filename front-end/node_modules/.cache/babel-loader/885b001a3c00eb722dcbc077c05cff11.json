{"ast":null,"code":"import Axios from 'axios';\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from '../constants/userConstants';\nexport const register = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: `http://159.65.163.193:5000/individual/register`,\n      headers: {\n        \"cache-Control\": \"no-cache\",\n        \"content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        \"individual_email_address\": email,\n        \"individual_password\": password\n      }\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: `http://159.65.163.193/individual/signin`,\n      headers: {\n        \"cache-Control\": \"no-cache\",\n        \"content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        \"individual_email_address\": email,\n        \"individual_password\": password\n      }\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('newOrder');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/berna/Desktop/mainproject/SEN/front-end/src/actions/userActions.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","register","email","password","dispatch","type","payload","data","method","url","headers","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT,\r\n} from '../constants/userConstants';\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios({\r\n        method: \"POST\",\r\n        url: `http://159.65.163.193:5000/individual/register`,\r\n        headers: {\r\n          \"cache-Control\": \"no-cache\",\r\n          \"content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n           \"individual_email_address\":email,\r\n           \"individual_password\":password,\r\n        }\r\n    });\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signin = (email, password) => async (dispatch) => {\r\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n  try {\r\n    const { data } = await Axios({\r\n        method: \"POST\",\r\n        url: `http://159.65.163.193/individual/signin`,\r\n        headers: {\r\n          \"cache-Control\": \"no-cache\",\r\n          \"content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n           \"individual_email_address\":email,\r\n           \"individual_password\":password,\r\n        }\r\n    });\r\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('newOrder');\r\n  dispatch({ type: USER_SIGNOUT });\r\n};"]},"metadata":{},"sourceType":"module"}
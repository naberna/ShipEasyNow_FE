{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berna\\\\Desktop\\\\mainproject\\\\SEN\\\\front-end\\\\src\\\\forms\\\\InstantQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { BsArrowRightShort } from \"react-icons/bs\";\nimport validateQuote from \"./validateQuote\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { zipCodeListFrom } from \"../actions/zipCodeActions\";\nimport { zipCodeListTo } from \"../actions/zipCodeActions\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InstantQuote = () => {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    zipFrom: \"\",\n    zipTo: \"\"\n  });\n  const [errors, setErrors] = useState([]);\n  const HISTORY = useHistory();\n  const inputNames = [\"zipFrom\", \"zipTo\"];\n  const dispatch = useDispatch(); // const zipCodeFromList = useSelector((state) => state.zipCodeFromList);\n  // const zipCodeToList = useSelector((state) => state.zipCodeToList);\n  // const {loading, error, zipCodesFrom } = zipCodeFromList;\n  // const {loadingTo, errorTo, zipCodesTo } = zipCodeToList;\n\n  const doValidate = inputsInState => {\n    let success = true;\n    console.log(\"RAN\", inputsInState);\n    inputNames.forEach(inputName => {\n      const validation = validateQuote(inputName, inputsInState[inputName]);\n      console.log(inputName, validation);\n\n      if (!validation.isValid) {\n        success = false;\n        setError(inputName, validation.message);\n      } else removeError(inputName);\n    });\n    return success;\n  };\n\n  useEffect(() => {\n    doValidate(inputs);\n  }, [inputs]);\n\n  const Continue = e => {\n    e.preventDefault();\n    if (doValidate(inputs)) dispatch(zipCodeListFrom(inputs.zipFrom));\n    dispatch(zipCodeListTo(inputs.zipTo));\n    console.log(\"Berna\" + inputs.zipTo);\n    HISTORY.push({\n      pathname: \"/checkout\",\n      state: inputs\n    });\n  };\n\n  const setError = (inputName, message = null) => {\n    const isExist = (errors.filter(error => error.inputName === inputName) || []).length > 0;\n    if (isExist) return;\n    setErrors([...errors, {\n      inputName,\n      message\n    }]);\n  };\n\n  const removeError = inputNames => {\n    if (!(typeof inputNames === \"string\" || Array.isArray(inputNames))) return;\n    if (!inputNames.length) return;\n    if (typeof inputNames === \"string\") inputNames = [inputNames];\n    const newState = errors.filter(error => !inputNames.includes(error.inputName));\n    setErrors(newState);\n  };\n\n  const GetError = props => {\n    const {\n      inputName\n    } = props;\n\n    const EMPTY_COMPONENT = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n    if (!inputName) return EMPTY_COMPONENT;\n    const findedError = errors.find(error => error.inputName === inputName);\n    if (!findedError) return EMPTY_COMPONENT;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      type: \"invalid\",\n      className: \"error\",\n      children: findedError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleChange = inputName => e => {\n    e.preventDefault();\n    setInputs({ ...inputs,\n      [inputName]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"instantquote p-3 mb-5\",\n    novalidateQuote: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formGroupFrom\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Transport car FROM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"ZIP or CITY\",\n        name: \"zipFrom\",\n        onChange: handleChange(\"zipFrom\"),\n        defaultValue: inputs.zipFrom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GetError, {\n        inputName: \"zipFrom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formGroupTo\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Transport car TO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"ZIP or CITY\",\n        name: \"zipTo\",\n        onChange: handleChange(\"zipTo\"),\n        defaultValue: inputs.zipTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GetError, {\n        inputName: \"zipTo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"pickUpDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Pick Up Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: handleChange(\"pickUpDate\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"dropOffDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Drop Off Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: handleChange(\"dropOffDate\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"selectNumberOfCars\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Number Of Cars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn button\",\n      onClick: Continue,\n      children: [\"Vehicle Details\", /*#__PURE__*/_jsxDEV(BsArrowRightShort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InstantQuote, \"DEIkelApFF2iL1x5pYK4hAqd3ec=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = InstantQuote;\nexport default InstantQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstantQuote\");","map":{"version":3,"sources":["C:/Users/berna/Desktop/mainproject/SEN/front-end/src/forms/InstantQuote.js"],"names":["React","useState","useEffect","Form","BsArrowRightShort","validateQuote","useHistory","useDispatch","useSelector","zipCodeListFrom","zipCodeListTo","InstantQuote","inputs","setInputs","zipFrom","zipTo","errors","setErrors","HISTORY","inputNames","dispatch","doValidate","inputsInState","success","console","log","forEach","inputName","validation","isValid","setError","message","removeError","Continue","e","preventDefault","push","pathname","state","isExist","filter","error","length","Array","isArray","newState","includes","GetError","props","EMPTY_COMPONENT","findedError","find","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BsArrowRightShort } from \"react-icons/bs\";\r\nimport validateQuote from \"./validateQuote\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { zipCodeListFrom } from \"../actions/zipCodeActions\";\r\nimport { zipCodeListTo } from \"../actions/zipCodeActions\";\r\n\r\nconst InstantQuote = () => {\r\n  const [inputs, setInputs] = useState({\r\n    zipFrom: \"\",\r\n    zipTo: \"\",\r\n  });\r\n  const [errors, setErrors] = useState([]);\r\n  const HISTORY = useHistory();\r\n  const inputNames = [\"zipFrom\", \"zipTo\"];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const zipCodeFromList = useSelector((state) => state.zipCodeFromList);\r\n  // const zipCodeToList = useSelector((state) => state.zipCodeToList);\r\n\r\n  // const {loading, error, zipCodesFrom } = zipCodeFromList;\r\n  // const {loadingTo, errorTo, zipCodesTo } = zipCodeToList;\r\n\r\n  const doValidate = (inputsInState) => {\r\n    let success = true;\r\n    console.log(\"RAN\", inputsInState);\r\n    inputNames.forEach((inputName) => {\r\n      const validation = validateQuote(inputName, inputsInState[inputName]);\r\n      console.log(inputName, validation);\r\n      if (!validation.isValid) {\r\n        success = false;\r\n        setError(inputName, validation.message);\r\n      } else removeError(inputName);\r\n    });\r\n\r\n    return success;\r\n  };\r\n\r\n  useEffect(() => {\r\n    doValidate(inputs);\r\n  }, [inputs]);\r\n\r\n  const Continue = (e) => {\r\n    e.preventDefault();\r\n    if (doValidate(inputs)) dispatch(zipCodeListFrom(inputs.zipFrom));\r\n    dispatch(zipCodeListTo(inputs.zipTo));\r\n    console.log(\"Berna\" + inputs.zipTo);\r\n    HISTORY.push({ pathname: \"/checkout\", state: inputs });\r\n  };\r\n\r\n  const setError = (inputName, message = null) => {\r\n    const isExist =\r\n      (errors.filter((error) => error.inputName === inputName) || []).length >\r\n      0;\r\n    if (isExist) return;\r\n    setErrors([\r\n      ...errors,\r\n      {\r\n        inputName,\r\n        message,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const removeError = (inputNames) => {\r\n    if (!(typeof inputNames === \"string\" || Array.isArray(inputNames))) return;\r\n    if (!inputNames.length) return;\r\n    if (typeof inputNames === \"string\") inputNames = [inputNames];\r\n    const newState = errors.filter(\r\n      (error) => !inputNames.includes(error.inputName)\r\n    );\r\n    setErrors(newState);\r\n  };\r\n\r\n  const GetError = (props) => {\r\n    const { inputName } = props;\r\n    const EMPTY_COMPONENT = <></>;\r\n    if (!inputName) return EMPTY_COMPONENT;\r\n    const findedError = errors.find((error) => error.inputName === inputName);\r\n    if (!findedError) return EMPTY_COMPONENT;\r\n    return (\r\n      <div type=\"invalid\" className=\"error\">\r\n        {findedError.message}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleChange = (inputName) => (e) => {\r\n    e.preventDefault();\r\n\r\n    setInputs({\r\n      ...inputs,\r\n      [inputName]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"instantquote p-3 mb-5\" novalidateQuote>\r\n      <Form.Group controlId=\"formGroupFrom\">\r\n        <Form.Label className=\"form-subtitle\">Transport car FROM</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"ZIP or CITY\"\r\n          name=\"zipFrom\"\r\n          onChange={handleChange(\"zipFrom\")}\r\n          defaultValue={inputs.zipFrom}\r\n        />\r\n        <GetError inputName={\"zipFrom\"}></GetError>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGroupTo\">\r\n        <Form.Label className=\"form-subtitle\">Transport car TO</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"ZIP or CITY\"\r\n          name=\"zipTo\"\r\n          onChange={handleChange(\"zipTo\")}\r\n          defaultValue={inputs.zipTo}\r\n        />\r\n        <GetError inputName={\"zipTo\"}></GetError>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"pickUpDate\">\r\n        <Form.Label className=\"form-subtitle\">Pick Up Date</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          onChange={handleChange(\"pickUpDate\")}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"dropOffDate\">\r\n        <Form.Label className=\"form-subtitle\">Drop Off Date</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          onChange={handleChange(\"dropOffDate\")}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"selectNumberOfCars\">\r\n        {/* <Form.Label>Number Of Cars</Form.Label> */}\r\n        <Form.Control as=\"select\">\r\n          <option>Number Of Cars</option>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n          <option>6</option>\r\n          <option>7</option>\r\n          <option>8</option>\r\n          <option>9</option>\r\n          <option>10</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <button className=\"btn button\" onClick={Continue}>\r\n        Vehicle Details\r\n        <BsArrowRightShort />\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default InstantQuote;\r\n"]},"metadata":{},"sourceType":"module"}
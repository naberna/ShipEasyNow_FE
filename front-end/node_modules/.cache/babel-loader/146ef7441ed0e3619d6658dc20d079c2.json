{"ast":null,"code":"const inputs = {\n  zipTo: {\n    // validation: /\\S+@\\S+\\.\\S+/, \n    required: true,\n    title: 'ZIP CODE',\n    message: \"Zip Code required\"\n  },\n  zipFrom: {\n    // validation: /\\S+@\\S+\\.\\S+/, \n    required: true,\n    title: 'ZIP CODE',\n    message: \"Zip Code required\"\n  }\n};\nexport default function validateQuote(inputName, inputValue) {\n  const status = {\n    isValid: false,\n    message: ''\n  };\n\n  const setError = (message = '') => {\n    status.message = message;\n    status.isValid = false;\n    return status;\n  };\n\n  const success = () => {\n    status.message = '';\n    status.isValid = true;\n    return status;\n  };\n\n  const input = inputs[inputName]; // EĞER INPUT YOKSA HATA DON\n\n  if (!input) return setError('Bu Input ıcın valıdatıon tanımlanmamış'); // EĞER INPUT ZORUNLUYSA VE DEĞERİ BOŞ İSE HATA DON\n\n  if (input.required && !inputValue) return setError(input.message); // EĞER REGEX BELIRTILDIYSE VE REGEX KONTOLU BAŞARISIZSA HATA DON\n\n  if (input.validation && !input.validation.test(inputValue)) return setError(`${input.title} is not valid`); // EĞER YUKARIDAKI KONTROLLERE YAKANALNMADIYSA SUCCESS DON\n\n  return success();\n}","map":{"version":3,"sources":["C:/Users/berna/Desktop/mainproject/SEN/front-end/src/forms/validateQuote.js"],"names":["inputs","zipTo","required","title","message","zipFrom","validateQuote","inputName","inputValue","status","isValid","setError","success","input","validation","test"],"mappings":"AAAA,MAAMA,MAAM,GAAG;AAEbC,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,KAAK,EAAE,UAHF;AAILC,IAAAA,OAAO,EAAE;AAJJ,GAFM;AAQbC,EAAAA,OAAO,EAAE;AACP;AACAH,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,KAAK,EAAE,UAHA;AAIPC,IAAAA,OAAO,EAAE;AAJF;AARI,CAAf;AAiBA,eAAe,SAASE,aAAT,CAAuBC,SAAvB,EAAkCC,UAAlC,EAA8C;AAC3D,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,KADI;AAEbN,IAAAA,OAAO,EAAE;AAFI,GAAf;;AAKA,QAAMO,QAAQ,GAAG,CAACP,OAAO,GAAG,EAAX,KAAkB;AACjCK,IAAAA,MAAM,CAACL,OAAP,GAAiBA,OAAjB;AACAK,IAAAA,MAAM,CAACC,OAAP,GAAiB,KAAjB;AACA,WAAOD,MAAP;AACD,GAJD;;AAMA,QAAMG,OAAO,GAAG,MAAM;AACpBH,IAAAA,MAAM,CAACL,OAAP,GAAkB,EAAlB;AACAK,IAAAA,MAAM,CAACC,OAAP,GAAiB,IAAjB;AACA,WAAOD,MAAP;AACD,GAJD;;AAMA,QAAMI,KAAK,GAAGb,MAAM,CAACO,SAAD,CAApB,CAlB2D,CAmB3D;;AACA,MAAG,CAACM,KAAJ,EAAW,OAAOF,QAAQ,CAAC,wCAAD,CAAf,CApBgD,CAqB3D;;AACA,MAAGE,KAAK,CAACX,QAAN,IAAkB,CAACM,UAAtB,EAAkC,OAAOG,QAAQ,CAACE,KAAK,CAACT,OAAP,CAAf,CAtByB,CAuB3D;;AACA,MAAGS,KAAK,CAACC,UAAN,IAAoB,CAACD,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsBP,UAAtB,CAAxB,EAA2D,OAAOG,QAAQ,CAAE,GAAEE,KAAK,CAACV,KAAM,eAAhB,CAAf,CAxBA,CA2B3D;;AACA,SAAOS,OAAO,EAAd;AACD","sourcesContent":["const inputs = {\r\n  \r\n  zipTo: {\r\n    // validation: /\\S+@\\S+\\.\\S+/, \r\n    required: true,\r\n    title: 'ZIP CODE',\r\n    message: \"Zip Code required\"\r\n  },\r\n  zipFrom: {\r\n    // validation: /\\S+@\\S+\\.\\S+/, \r\n    required: true,\r\n    title: 'ZIP CODE',\r\n    message: \"Zip Code required\"\r\n  },\r\n};\r\n\r\n\r\nexport default function validateQuote(inputName, inputValue) {\r\n  const status = {\r\n    isValid: false,\r\n    message: '',\r\n  };\r\n\r\n  const setError = (message = '') => {\r\n    status.message = message;\r\n    status.isValid = false;\r\n    return status;\r\n  }\r\n\r\n  const success = () => {\r\n    status.message  = '';\r\n    status.isValid = true;\r\n    return status;\r\n  }\r\n\r\n  const input = inputs[inputName];\r\n  // EĞER INPUT YOKSA HATA DON\r\n  if(!input) return setError('Bu Input ıcın valıdatıon tanımlanmamış'); \r\n  // EĞER INPUT ZORUNLUYSA VE DEĞERİ BOŞ İSE HATA DON\r\n  if(input.required && !inputValue) return setError(input.message);\r\n  // EĞER REGEX BELIRTILDIYSE VE REGEX KONTOLU BAŞARISIZSA HATA DON\r\n  if(input.validation && !input.validation.test(inputValue)) return setError(`${input.title} is not valid`);\r\n  \r\n  \r\n  // EĞER YUKARIDAKI KONTROLLERE YAKANALNMADIYSA SUCCESS DON\r\n  return success();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
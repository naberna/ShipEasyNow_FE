{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berna\\\\Desktop\\\\mainproject\\\\SEN\\\\front-end\\\\src\\\\forms\\\\InstantQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { BsArrowRightShort } from \"react-icons/bs\";\nimport validateQuote from \"./validateQuote\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { zipCodeListFrom } from \"../actions/zipCodeActions\";\nimport { zipCodeListTo } from \"../actions/zipCodeActions\";\nimport { instantQuote } from \"../actions/orderFormActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InstantQuote = () => {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    zipFrom: \"\",\n    zipTo: \"\",\n    pickUpDate: \"\",\n    dropOffDate: \"\",\n    numberOfCars: \"\"\n  }); // const [errors, setErrors] = useState([]);\n\n  const HISTORY = useHistory();\n  const inputNames = [\"zipFrom\", \"zipTo\", \"pickUpDate\", \"dropOffDate\", \"numberOfCars\"];\n  const dispatch = useDispatch(); // const zipCodeFromList = useSelector((state) => state.zipCodeFromList);\n  // const zipCodeToList = useSelector((state) => state.zipCodeToList);\n  // const {loading, error, zipCodesFrom } = zipCodeFromList;\n  // const {loadingTo, errorTo, zipCodesTo } = zipCodeToList;\n  // const doValidate = (inputsInState) => {\n  //   let success = true;\n  //   console.log(\"RAN\", inputsInState);\n  //   inputNames.forEach((inputName) => {\n  //     const validation = validateQuote(inputName, inputsInState[inputName]);\n  //     console.log(inputName, validation);\n  //     if (!validation.isValid) {\n  //       success = false;\n  //       setError(inputName, validation.message);\n  //     } else removeError(inputName);\n  //   });\n  //   return success;\n  // };\n  // useEffect(() => {\n  //   doValidate(inputs);\n  // }, [inputs]);\n\n  const Continue = e => {\n    e.preventDefault(); // if (doValidate(inputs)) \n\n    dispatch(zipCodeListFrom(inputs.zipFrom));\n    dispatch(zipCodeListTo(inputs.zipTo)); // console.log(\"Berna\" + inputs.zipTo);\n\n    HISTORY.push({\n      pathname: \"/checkout\",\n      state: inputs\n    });\n  }; // const setError = (inputName, message = null) => {\n  //   const isExist =\n  //     (errors.filter((error) => error.inputName === inputName) || []).length >\n  //     0;\n  //   if (isExist) return;\n  //   setErrors([\n  //     ...errors,\n  //     {\n  //       inputName,\n  //       message,\n  //     },\n  //   ]);\n  // };\n  // const removeError = (inputNames) => {\n  //   if (!(typeof inputNames === \"string\" || Array.isArray(inputNames))) return;\n  //   if (!inputNames.length) return;\n  //   if (typeof inputNames === \"string\") inputNames = [inputNames];\n  //   const newState = errors.filter(\n  //     (error) => !inputNames.includes(error.inputName)\n  //   );\n  //   setErrors(newState);\n  // };\n  // const GetError = (props) => {\n  //   const { inputName } = props;\n  //   const EMPTY_COMPONENT = <></>;\n  //   if (!inputName) return EMPTY_COMPONENT;\n  //   const findedError = errors.find((error) => error.inputName === inputName);\n  //   if (!findedError) return EMPTY_COMPONENT;\n  //   return (\n  //     <div type=\"invalid\" className=\"error\">\n  //       {findedError.message}\n  //     </div>\n  //   );\n  // };\n\n\n  const handleChange = inputName => e => {\n    e.preventDefault();\n    setInputs({ ...inputs,\n      [inputName]: e.target.value\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(instantQuote([inputs])); // props.history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"instantquote p-3 mb-5\",\n    novalidateQuote: true,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formGroupFrom\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Transport car FROM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"ZIP or CITY\",\n        name: \"zipFrom\",\n        onChange: handleChange(\"zipFrom\"),\n        defaultValue: inputs.zipFrom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formGroupTo\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Transport car TO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"ZIP or CITY\",\n        name: \"zipTo\",\n        onChange: handleChange(\"zipTo\"),\n        defaultValue: inputs.zipTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"pickUpDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Pick Up Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: handleChange(\"pickUpDate\"),\n        name: \"pickUpDate\",\n        defaultValue: inputs.pickUpDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"dropOffDate\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"form-subtitle\",\n        children: \"Drop Off Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: handleChange(\"dropOffDate\"),\n        name: \"dropOffDate\",\n        defaultValue: inputs.dropOffDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"selectNumberOfCars\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        className: \"dropdown\",\n        onChange: handleChange(\"numberOfCars\"),\n        name: \"numberOfCars\",\n        defaultValue: inputs.numberOfCars,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Number Of Cars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn button\",\n      onClick: Continue,\n      children: [\"Vehicle Details\", /*#__PURE__*/_jsxDEV(BsArrowRightShort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InstantQuote, \"RZk61z00E+Px9h9E/FHv4QnEk/A=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = InstantQuote;\nexport default InstantQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstantQuote\");","map":{"version":3,"sources":["C:/Users/berna/Desktop/mainproject/SEN/front-end/src/forms/InstantQuote.js"],"names":["React","useState","useEffect","Form","BsArrowRightShort","validateQuote","useHistory","useDispatch","useSelector","zipCodeListFrom","zipCodeListTo","instantQuote","InstantQuote","inputs","setInputs","zipFrom","zipTo","pickUpDate","dropOffDate","numberOfCars","HISTORY","inputNames","dispatch","Continue","e","preventDefault","push","pathname","state","handleChange","inputName","target","value","submitHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { BsArrowRightShort } from \"react-icons/bs\";\r\nimport validateQuote from \"./validateQuote\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { zipCodeListFrom } from \"../actions/zipCodeActions\";\r\nimport { zipCodeListTo } from \"../actions/zipCodeActions\";\r\nimport { instantQuote } from \"../actions/orderFormActions\";\r\n\r\nconst InstantQuote = () => {\r\n  const [inputs, setInputs] = useState({\r\n    zipFrom: \"\",\r\n    zipTo: \"\",\r\n    pickUpDate: \"\",\r\n    dropOffDate: \"\",\r\n    numberOfCars: \"\",\r\n  });\r\n  // const [errors, setErrors] = useState([]);\r\n  const HISTORY = useHistory(); \r\n  const inputNames = [\"zipFrom\", \"zipTo\", \"pickUpDate\", \"dropOffDate\", \"numberOfCars\"];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const zipCodeFromList = useSelector((state) => state.zipCodeFromList);\r\n  // const zipCodeToList = useSelector((state) => state.zipCodeToList);\r\n\r\n  // const {loading, error, zipCodesFrom } = zipCodeFromList;\r\n  // const {loadingTo, errorTo, zipCodesTo } = zipCodeToList;\r\n\r\n  // const doValidate = (inputsInState) => {\r\n  //   let success = true;\r\n  //   console.log(\"RAN\", inputsInState);\r\n  //   inputNames.forEach((inputName) => {\r\n  //     const validation = validateQuote(inputName, inputsInState[inputName]);\r\n  //     console.log(inputName, validation);\r\n  //     if (!validation.isValid) {\r\n  //       success = false;\r\n  //       setError(inputName, validation.message);\r\n  //     } else removeError(inputName);\r\n  //   });\r\n\r\n  //   return success;\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   doValidate(inputs);\r\n  // }, [inputs]);\r\n\r\n  const Continue = (e) => {\r\n    e.preventDefault();\r\n    // if (doValidate(inputs)) \r\n    dispatch(zipCodeListFrom(inputs.zipFrom));\r\n    dispatch(zipCodeListTo(inputs.zipTo));\r\n    // console.log(\"Berna\" + inputs.zipTo);\r\n    HISTORY.push({ pathname: \"/checkout\", state: inputs });\r\n  };\r\n\r\n  // const setError = (inputName, message = null) => {\r\n  //   const isExist =\r\n  //     (errors.filter((error) => error.inputName === inputName) || []).length >\r\n  //     0;\r\n  //   if (isExist) return;\r\n  //   setErrors([\r\n  //     ...errors,\r\n  //     {\r\n  //       inputName,\r\n  //       message,\r\n  //     },\r\n  //   ]);\r\n  // };\r\n\r\n  // const removeError = (inputNames) => {\r\n  //   if (!(typeof inputNames === \"string\" || Array.isArray(inputNames))) return;\r\n  //   if (!inputNames.length) return;\r\n  //   if (typeof inputNames === \"string\") inputNames = [inputNames];\r\n  //   const newState = errors.filter(\r\n  //     (error) => !inputNames.includes(error.inputName)\r\n  //   );\r\n  //   setErrors(newState);\r\n  // };\r\n\r\n  // const GetError = (props) => {\r\n  //   const { inputName } = props;\r\n  //   const EMPTY_COMPONENT = <></>;\r\n  //   if (!inputName) return EMPTY_COMPONENT;\r\n  //   const findedError = errors.find((error) => error.inputName === inputName);\r\n  //   if (!findedError) return EMPTY_COMPONENT;\r\n  //   return (\r\n  //     <div type=\"invalid\" className=\"error\">\r\n  //       {findedError.message}\r\n  //     </div>\r\n  //   );\r\n  // };\r\n\r\n  const handleChange = (inputName) => (e) => {\r\n    e.preventDefault();\r\n\r\n    setInputs({\r\n      ...inputs,\r\n      [inputName]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(instantQuote([inputs]));\r\n    // props.history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Form className=\"instantquote p-3 mb-5\" novalidateQuote onSubmit={submitHandler}>\r\n      <Form.Group controlId=\"formGroupFrom\">\r\n        <Form.Label className=\"form-subtitle\">Transport car FROM</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"ZIP or CITY\"\r\n          name=\"zipFrom\"\r\n          onChange={handleChange(\"zipFrom\")}\r\n          defaultValue={inputs.zipFrom}\r\n        />\r\n        {/* <GetError inputName={\"zipFrom\"}></GetError> */}\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formGroupTo\">\r\n        <Form.Label className=\"form-subtitle\">Transport car TO</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"ZIP or CITY\"\r\n          name=\"zipTo\"\r\n          onChange={handleChange(\"zipTo\")}\r\n          defaultValue={inputs.zipTo}\r\n        />\r\n        {/* <GetError inputName={\"zipTo\"}></GetError> */}\r\n      </Form.Group>\r\n      <Form.Group controlId=\"pickUpDate\">\r\n        <Form.Label className=\"form-subtitle\">Pick Up Date</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          onChange={handleChange(\"pickUpDate\")}\r\n          name=\"pickUpDate\"\r\n          defaultValue={inputs.pickUpDate}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"dropOffDate\">\r\n        <Form.Label className=\"form-subtitle\">Drop Off Date</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          onChange={handleChange(\"dropOffDate\")}\r\n          name=\"dropOffDate\"\r\n          defaultValue={inputs.dropOffDate}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"selectNumberOfCars\">\r\n        {/* <Form.Label>Number Of Cars</Form.Label> */}\r\n        <Form.Control as=\"select\" className=\"dropdown\" onChange={handleChange(\"numberOfCars\")} name=\"numberOfCars\" defaultValue={inputs.numberOfCars}>\r\n          <option>Number Of Cars</option>\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n          <option>6</option>\r\n          <option>7</option>\r\n          <option>8</option>\r\n          <option>9</option>\r\n          <option>10</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <button className=\"btn button\" onClick={Continue}>\r\n        Vehicle Details\r\n        <BsArrowRightShort />\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default InstantQuote;\r\n"]},"metadata":{},"sourceType":"module"}
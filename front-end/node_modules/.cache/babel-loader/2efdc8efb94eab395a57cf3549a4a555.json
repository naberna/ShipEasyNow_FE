{"ast":null,"code":"import Axios from \"axios\";\nimport { NEW_ORDER_FORM_VEHICLE_DETAILS, NEW_ORDER_INFORMAION_DETAILS, NEW_ORDER_PAYMENT_METHOD, CALCULATE_COST_REQUEST, CALCULATE_COST_SUCCESS, CALCULATE_COST_FAIL, NEW_ORDER_REQUEST, NEW_ORDER_SUCCESS, NEW_ORDER_FAIL, NEW_ORDER_CAR_REQUEST, NEW_ORDER_CAR_SUCCESS, NEW_ORDER_CAR_FAIL } from \"../constants/orderFormConstants\";\nexport const orderNew = (zipCodeFrom, zipCodeTo, pickUpDate, dropOffDate, numberOfCars) => async (dispatch, getState) => {\n  dispatch({\n    type: NEW_ORDER_REQUEST,\n    payload: {\n      zipCodeFrom,\n      zipCodeTo,\n      pickUpDate,\n      dropOffDate,\n      numberOfCars\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"http://159.65.163.193/order/new\",\n      headers: {\n        \"cache-Control\": \"no-cache\",\n        \"content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        order_from_zip: zipCodeFrom,\n        order_to_zip: zipCodeTo,\n        order_pick_up_date: pickUpDate,\n        order_drop_off_date: dropOffDate,\n        order_number_of_cars: numberOfCars\n      }\n    });\n    dispatch({\n      type: NEW_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_ORDER_FAIL,\n      payload: error.message\n    });\n  }\n\n  localStorage.setItem(\"newOrderList\", JSON.stringify(getState().newOrderList));\n};\nexport const orderNewCar = (carMake, carModel, carYear, carSize, orderId, carMileage, carVinNumber, carIsOperable, carIsInAuction) => async (dispatch, getState) => {\n  dispatch({\n    type: NEW_ORDER_CAR_REQUEST,\n    payload: {\n      carMake,\n      carModel,\n      carYear,\n      carSize,\n      orderId,\n      carMileage,\n      carVinNumber,\n      carIsOperable,\n      carIsInAuction\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"http://159.65.163.193:5000/car/new\",\n      headers: {\n        \"cache-Control\": \"no-cache\",\n        \"content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        car_make: carMake,\n        car_model: carModel,\n        car_year: carYear,\n        car_size: carSize,\n        order_id: orderId,\n        car_mileage: carMileage,\n        car_vin_number: carVinNumber,\n        car_is_operable: carIsOperable,\n        car_is_in_auction: carIsInAuction\n      }\n    });\n    dispatch({\n      type: NEW_ORDER_CAR_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_ORDER_CAR_FAIL,\n      payload: error.message\n    });\n  }\n\n  localStorage.setItem('newOrderCar', JSON.stringify(getState().newOrderCarList.newOrderCar));\n};\nexport const informationDetailsList = data => dispatch => {\n  dispatch({\n    type: NEW_ORDER_INFORMAION_DETAILS,\n    payload: data\n  }); // localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: NEW_ORDER_PAYMENT_METHOD,\n    payload: data\n  });\n};\nexport const calculateCost = (zipList, carList, individual) => async dispatch => {\n  dispatch({\n    type: CALCULATE_COST_REQUEST,\n    payload: {\n      zipList,\n      carList,\n      individual\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios({\n      method: \"POST\",\n      url: \"http://159.65.45.58:5000/price/\",\n      headers: {\n        \"cache-Control\": \"no-cache\",\n        \"content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      data: {\n        ziplist: zipList,\n        carlist: carList,\n        individual: individual\n      }\n    });\n    dispatch({\n      type: CALCULATE_COST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CALCULATE_COST_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/berna/Desktop/mainproject/SEN/front-end/src/actions/orderFormActions.js"],"names":["Axios","NEW_ORDER_FORM_VEHICLE_DETAILS","NEW_ORDER_INFORMAION_DETAILS","NEW_ORDER_PAYMENT_METHOD","CALCULATE_COST_REQUEST","CALCULATE_COST_SUCCESS","CALCULATE_COST_FAIL","NEW_ORDER_REQUEST","NEW_ORDER_SUCCESS","NEW_ORDER_FAIL","NEW_ORDER_CAR_REQUEST","NEW_ORDER_CAR_SUCCESS","NEW_ORDER_CAR_FAIL","orderNew","zipCodeFrom","zipCodeTo","pickUpDate","dropOffDate","numberOfCars","dispatch","getState","type","payload","data","method","url","headers","order_from_zip","order_to_zip","order_pick_up_date","order_drop_off_date","order_number_of_cars","error","message","localStorage","setItem","JSON","stringify","newOrderList","orderNewCar","carMake","carModel","carYear","carSize","orderId","carMileage","carVinNumber","carIsOperable","carIsInAuction","car_make","car_model","car_year","car_size","order_id","car_mileage","car_vin_number","car_is_operable","car_is_in_auction","newOrderCarList","newOrderCar","informationDetailsList","savePaymentMethod","calculateCost","zipList","carList","individual","ziplist","carlist"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,8BADF,EAEEC,4BAFF,EAGEC,wBAHF,EAIEC,sBAJF,EAKEC,sBALF,EAMEC,mBANF,EAOEC,iBAPF,EAQEC,iBARF,EASEC,cATF,EAUEC,qBAVF,EAWEC,qBAXF,EAYEC,kBAZF,QAaO,iCAbP;AAeA,OAAO,MAAMC,QAAQ,GACnB,CAACC,WAAD,EAAcC,SAAd,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkDC,YAAlD,KACA,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC5BD,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEd,iBADC;AAEPe,IAAAA,OAAO,EAAE;AACPR,MAAAA,WADO;AAEPC,MAAAA,SAFO;AAGPC,MAAAA,UAHO;AAIPC,MAAAA,WAJO;AAKPC,MAAAA;AALO;AAFF,GAAD,CAAR;;AAUA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMvB,KAAK,CAAC;AAC3BwB,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,GAAG,EAAE,iCAFsB;AAG3BC,MAAAA,OAAO,EAAE;AACP,yBAAiB,UADV;AAEP,wBAAgB,kBAFT;AAGP,uCAA+B;AAHxB,OAHkB;AAQ3BH,MAAAA,IAAI,EAAE;AACJI,QAAAA,cAAc,EAAEb,WADZ;AAEJc,QAAAA,YAAY,EAAEb,SAFV;AAGJc,QAAAA,kBAAkB,EAAEb,UAHhB;AAIJc,QAAAA,mBAAmB,EAAEb,WAJjB;AAKJc,QAAAA,oBAAoB,EAAEb;AALlB;AARqB,KAAD,CAA5B;AAgBAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEb,iBAAR;AAA2Bc,MAAAA,OAAO,EAAEC;AAApC,KAAD,CAAR;AACD,GAlBD,CAkBE,OAAOS,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEZ,cAAR;AAAwBa,MAAAA,OAAO,EAAEU,KAAK,CAACC;AAAvC,KAAD,CAAR;AACD;;AACDC,EAAAA,YAAY,CAACC,OAAb,CACE,cADF,EAEEC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,YAA1B,CAFF;AAID,CAtCI;AAwCP,OAAO,MAAMC,WAAW,GACtB,CACEC,OADF,EAEEC,QAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,UANF,EAOEC,YAPF,EAQEC,aARF,EASEC,cATF,KAWA,OAAO7B,QAAP,EAAiBC,QAAjB,KAA8B;AAC5BD,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEX,qBADC;AAEPY,IAAAA,OAAO,EAAE;AACPkB,MAAAA,OADO;AAEPC,MAAAA,QAFO;AAGPC,MAAAA,OAHO;AAIPC,MAAAA,OAJO;AAKPC,MAAAA,OALO;AAMPC,MAAAA,UANO;AAOPC,MAAAA,YAPO;AAQPC,MAAAA,aARO;AASPC,MAAAA;AATO;AAFF,GAAD,CAAR;;AAcA,MAAI;AACF,UAAM;AAAEzB,MAAAA;AAAF,QAAW,MAAMvB,KAAK,CAAC;AAC3BwB,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,GAAG,EAAE,oCAFsB;AAG3BC,MAAAA,OAAO,EAAE;AACP,yBAAiB,UADV;AAEP,wBAAgB,kBAFT;AAGP,uCAA+B;AAHxB,OAHkB;AAQ3BH,MAAAA,IAAI,EAAE;AACJ0B,QAAAA,QAAQ,EAAET,OADN;AAEJU,QAAAA,SAAS,EAAET,QAFP;AAGJU,QAAAA,QAAQ,EAAET,OAHN;AAIJU,QAAAA,QAAQ,EAAET,OAJN;AAKJU,QAAAA,QAAQ,EAAET,OALN;AAMJU,QAAAA,WAAW,EAAET,UANT;AAOJU,QAAAA,cAAc,EAAET,YAPZ;AAQJU,QAAAA,eAAe,EAAET,aARb;AASJU,QAAAA,iBAAiB,EAAET;AATf;AARqB,KAAD,CAA5B;AAoBA7B,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEV,qBAAR;AAA+BW,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACD,GAtBD,CAsBE,OAAOS,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,kBAAR;AAA4BU,MAAAA,OAAO,EAAEU,KAAK,CAACC;AAA3C,KAAD,CAAR;AACD;;AACDC,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGsC,eAAX,CAA2BC,WAA1C,CAApC;AACD,CArDI;AAuDP,OAAO,MAAMC,sBAAsB,GAAIrC,IAAD,IAAWJ,QAAD,IAAc;AAC5DA,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAEnB,4BAAR;AAAsCoB,IAAAA,OAAO,EAAEC;AAA/C,GAAD,CAAR,CAD4D,CAE5D;AACD,CAHM;AAKP,OAAO,MAAMsC,iBAAiB,GAAItC,IAAD,IAAWJ,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAElB,wBAAR;AAAkCmB,IAAAA,OAAO,EAAEC;AAA3C,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMuC,aAAa,GACxB,CAACC,OAAD,EAAUC,OAAV,EAAmBC,UAAnB,KAAkC,MAAO9C,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEjB,sBADC;AAEPkB,IAAAA,OAAO,EAAE;AAAEyC,MAAAA,OAAF;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA;AAApB;AAFF,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAE1C,MAAAA;AAAF,QAAW,MAAMvB,KAAK,CAAC;AAC3BwB,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,GAAG,EAAE,iCAFsB;AAG3BC,MAAAA,OAAO,EAAE;AACP,yBAAiB,UADV;AAEP,wBAAgB,kBAFT;AAGP,uCAA+B;AAHxB,OAHkB;AAQ3BH,MAAAA,IAAI,EAAE;AACJ2C,QAAAA,OAAO,EAAEH,OADL;AAEJI,QAAAA,OAAO,EAAEH,OAFL;AAGJC,QAAAA,UAAU,EAAEA;AAHR;AARqB,KAAD,CAA5B;AAcA9C,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEhB,sBAAR;AAAgCiB,MAAAA,OAAO,EAAEC;AAAzC,KAAD,CAAR;AACD,GAhBD,CAgBE,OAAOS,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEf,mBAAR;AAA6BgB,MAAAA,OAAO,EAAEU,KAAK,CAACC;AAA5C,KAAD,CAAR;AACD;AACF,CAzBI","sourcesContent":["import Axios from \"axios\";\r\nimport {\r\n  NEW_ORDER_FORM_VEHICLE_DETAILS,\r\n  NEW_ORDER_INFORMAION_DETAILS,\r\n  NEW_ORDER_PAYMENT_METHOD,\r\n  CALCULATE_COST_REQUEST,\r\n  CALCULATE_COST_SUCCESS,\r\n  CALCULATE_COST_FAIL,\r\n  NEW_ORDER_REQUEST,\r\n  NEW_ORDER_SUCCESS,\r\n  NEW_ORDER_FAIL,\r\n  NEW_ORDER_CAR_REQUEST,\r\n  NEW_ORDER_CAR_SUCCESS,\r\n  NEW_ORDER_CAR_FAIL,\r\n} from \"../constants/orderFormConstants\";\r\n\r\nexport const orderNew =\r\n  (zipCodeFrom, zipCodeTo, pickUpDate, dropOffDate, numberOfCars) =>\r\n  async (dispatch, getState) => {\r\n    dispatch({\r\n      type: NEW_ORDER_REQUEST,\r\n      payload: {\r\n        zipCodeFrom,\r\n        zipCodeTo,\r\n        pickUpDate,\r\n        dropOffDate,\r\n        numberOfCars,\r\n      },\r\n    });\r\n    try {\r\n      const { data } = await Axios({\r\n        method: \"POST\",\r\n        url: \"http://159.65.163.193/order/new\",\r\n        headers: {\r\n          \"cache-Control\": \"no-cache\",\r\n          \"content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n          order_from_zip: zipCodeFrom,\r\n          order_to_zip: zipCodeTo,\r\n          order_pick_up_date: pickUpDate,\r\n          order_drop_off_date: dropOffDate,\r\n          order_number_of_cars: numberOfCars,\r\n        },\r\n      });\r\n      dispatch({ type: NEW_ORDER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: NEW_ORDER_FAIL, payload: error.message });\r\n    }\r\n    localStorage.setItem(\r\n      \"newOrderList\",\r\n      JSON.stringify(getState().newOrderList)\r\n    );\r\n  };\r\n\r\nexport const orderNewCar =\r\n  (\r\n    carMake,\r\n    carModel,\r\n    carYear,\r\n    carSize,\r\n    orderId,\r\n    carMileage,\r\n    carVinNumber,\r\n    carIsOperable,\r\n    carIsInAuction\r\n  ) =>\r\n  async (dispatch, getState) => {\r\n    dispatch({\r\n      type: NEW_ORDER_CAR_REQUEST,\r\n      payload: {\r\n        carMake,\r\n        carModel,\r\n        carYear,\r\n        carSize,\r\n        orderId,\r\n        carMileage,\r\n        carVinNumber,\r\n        carIsOperable,\r\n        carIsInAuction,\r\n      },\r\n    });\r\n    try {\r\n      const { data } = await Axios({\r\n        method: \"POST\",\r\n        url: \"http://159.65.163.193:5000/car/new\",\r\n        headers: {\r\n          \"cache-Control\": \"no-cache\",\r\n          \"content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n          car_make: carMake,\r\n          car_model: carModel,\r\n          car_year: carYear,\r\n          car_size: carSize,\r\n          order_id: orderId,\r\n          car_mileage: carMileage,\r\n          car_vin_number: carVinNumber,\r\n          car_is_operable: carIsOperable,\r\n          car_is_in_auction: carIsInAuction,\r\n        },\r\n      });\r\n      dispatch({ type: NEW_ORDER_CAR_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: NEW_ORDER_CAR_FAIL, payload: error.message });\r\n    }\r\n    localStorage.setItem('newOrderCar', JSON.stringify(getState().newOrderCarList.newOrderCar));\r\n  };\r\n\r\nexport const informationDetailsList = (data) => (dispatch) => {\r\n  dispatch({ type: NEW_ORDER_INFORMAION_DETAILS, payload: data });\r\n  // localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({ type: NEW_ORDER_PAYMENT_METHOD, payload: data });\r\n};\r\n\r\nexport const calculateCost =\r\n  (zipList, carList, individual) => async (dispatch) => {\r\n    dispatch({\r\n      type: CALCULATE_COST_REQUEST,\r\n      payload: { zipList, carList, individual },\r\n    });\r\n    try {\r\n      const { data } = await Axios({\r\n        method: \"POST\",\r\n        url: \"http://159.65.45.58:5000/price/\",\r\n        headers: {\r\n          \"cache-Control\": \"no-cache\",\r\n          \"content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        data: {\r\n          ziplist: zipList,\r\n          carlist: carList,\r\n          individual: individual,\r\n        },\r\n      });\r\n      dispatch({ type: CALCULATE_COST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: CALCULATE_COST_FAIL, payload: error.message });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}
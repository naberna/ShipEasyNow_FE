{"ast":null,"code":"import Axios from \"axios\";\nimport { CAR_MODEL_LIST_REQUEST, CAR_MODEL_LIST_SUCCESS, CAR_MODEL_LIST_FAIL } from \"../constants/carConstants\";\nexport const modelCars = () => async dispatch => {\n  const express = require('express');\n\n  const request = require('request');\n\n  const app = express();\n  app.use((req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*');\n    next();\n  });\n  app.get('/cars/get_all_makes/', (req, res) => {\n    request({\n      url: 'http://159.65.45.58:5000/cars/get_all_makes/'\n    }, (error, response, body) => {\n      if (error || response.statusCode !== 200) {\n        return res.status(500).json({\n          type: 'error',\n          message: error.message\n        });\n      }\n\n      res.json(JSON.parse(body));\n    });\n  });\n  const PORT = process.env.PORT || 3000;\n  app.listen(PORT, () => console.log(`listening on ${PORT}`));\n  dispatch({\n    type: CAR_MODEL_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios({\n      method: 'GET',\n      url: 'http://159.65.45.58:5000/cars/get_all_makes/',\n      headers: {\n        'cache-Control': 'no-cache',\n        'content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    dispatch({\n      type: CAR_MODEL_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CAR_MODEL_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/berna/Desktop/mainproject/SEN/front-end/src/actions/carActions.js"],"names":["Axios","CAR_MODEL_LIST_REQUEST","CAR_MODEL_LIST_SUCCESS","CAR_MODEL_LIST_FAIL","modelCars","dispatch","express","require","request","app","use","req","res","next","header","get","url","error","response","body","statusCode","status","json","type","message","JSON","parse","PORT","process","env","listen","console","log","data","method","headers","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,EAAyDC,mBAAzD,QAAoF,2BAApF;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C,QAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,QAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AAEA,QAAME,GAAG,GAAGH,OAAO,EAAnB;AACAG,EAAAA,GAAG,CAACC,GAAJ,CAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxBD,IAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAD,IAAAA,IAAI;AACL,GAHH;AAKEJ,EAAAA,GAAG,CAACM,GAAJ,CAAQ,sBAAR,EAAgC,CAACJ,GAAD,EAAMC,GAAN,KAAc;AAC5CJ,IAAAA,OAAO,CACL;AAAEQ,MAAAA,GAAG,EAAE;AAAP,KADK,EAEL,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,KAA2B;AACzB,UAAIF,KAAK,IAAIC,QAAQ,CAACE,UAAT,KAAwB,GAArC,EAA0C;AACxC,eAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,OAAO,EAAEP,KAAK,CAACO;AAAhC,SAArB,CAAP;AACD;;AAEDZ,MAAAA,GAAG,CAACU,IAAJ,CAASG,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAT;AACD,KARI,CAAP;AAUD,GAXD;AAaA,QAAMQ,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAlB,EAAAA,GAAG,CAACqB,MAAJ,CAAWH,IAAX,EAAiB,MAAMI,OAAO,CAACC,GAAR,CAAa,gBAAeL,IAAK,EAAjC,CAAvB;AACFtB,EAAAA,QAAQ,CAAC;AACLkB,IAAAA,IAAI,EAAEtB;AADD,GAAD,CAAR;;AAGA,MAAI;AACA,UAAM;AAAEgC,MAAAA;AAAF,QAAW,MAAMjC,KAAK,CAAC;AACzBkC,MAAAA,MAAM,EAAE,KADiB;AAEzBlB,MAAAA,GAAG,EAAE,8CAFoB;AAGzBmB,MAAAA,OAAO,EAAE;AACL,yBAAiB,UADZ;AAEL,wBAAgB,kBAFX;AAGL,uCAA+B;AAH1B;AAHgB,KAAD,CAA5B;AASA9B,IAAAA,QAAQ,CAAC;AAACkB,MAAAA,IAAI,EAAErB,sBAAP;AAA+BkC,MAAAA,OAAO,EAAEH;AAAxC,KAAD,CAAR;AACH,GAXD,CAWE,OAAMhB,KAAN,EAAa;AACXZ,IAAAA,QAAQ,CAAC;AAACkB,MAAAA,IAAI,EAAEpB,mBAAP;AAA4BiC,MAAAA,OAAO,EAAEnB,KAAK,CAACO;AAA3C,KAAD,CAAR;AACH;AACJ,CA1CM","sourcesContent":["import Axios from \"axios\";\r\nimport { CAR_MODEL_LIST_REQUEST, CAR_MODEL_LIST_SUCCESS, CAR_MODEL_LIST_FAIL } from \"../constants/carConstants\"\r\n\r\nexport const modelCars = () => async (dispatch) => {\r\n    const express = require('express');\r\n    const request = require('request');\r\n\r\n    const app = express();\r\n    app.use((req, res, next) => {\r\n        res.header('Access-Control-Allow-Origin', '*');\r\n        next();\r\n      });\r\n      \r\n      app.get('/cars/get_all_makes/', (req, res) => {\r\n        request(\r\n          { url: 'http://159.65.45.58:5000/cars/get_all_makes/' },\r\n          (error, response, body) => {\r\n            if (error || response.statusCode !== 200) {\r\n              return res.status(500).json({ type: 'error', message: error.message });\r\n            }\r\n      \r\n            res.json(JSON.parse(body));\r\n          }\r\n        )\r\n      });\r\n      \r\n      const PORT = process.env.PORT || 3000;\r\n      app.listen(PORT, () => console.log(`listening on ${PORT}`));\r\n    dispatch({\r\n        type: CAR_MODEL_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await Axios({\r\n            method: 'GET',\r\n            url: 'http://159.65.45.58:5000/cars/get_all_makes/',\r\n            headers: {\r\n                'cache-Control': 'no-cache',\r\n                'content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n        })\r\n        dispatch({type: CAR_MODEL_LIST_SUCCESS, payload: data})\r\n    } catch(error) {\r\n        dispatch({type: CAR_MODEL_LIST_FAIL, payload: error.message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}